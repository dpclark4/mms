Features:
- Maze Validation (both physically valid mazes and competition valid mazes)
- Data recording for pause, rewind, fast forward
- Interrupt interface
- Run the program with maximum thread priority
- New maze w/o restarting app
- Ensure that any file can be loaded regardless of maze size specification
- Make terminal style output at bottom or right of window
- Shortest path graphic
- XML file for algorithm choice
- Indicator of sim speed (real time, 10x fast, etc.)
- Support more than two wheels (let's hold off on this for now...)
- More Arduino function support
- Dual screen! (mini-map and zoomed-in view - 1x1, 3x3, relative and absolute rotation)
- Draw a path of where the robot has been
- Support stepper motor / encoders interface
- Get Tomasz's random maze algorithm working
- Normalize random number generation (Implement Windows random number generation)
- Parameter for selecting a random maze file from the maze file directory

Clean-Up:
- Rename TTime.h to Duration.h and change Time to Duration where appropriate
- Convert floats to doubles where appropriate
- Return const references instead of values
- Change float to units (including in the ParamParser and Param class)
- Type safety (in terms of units) of the parameters
- Reduce includes as much as possible
- Rewrite the Makefile to use an "inc" directory
- Change "bool foo(false)" to "bool foo = false" for primitive - they look like function calls
- Handle bad values in the parameters, such as bad colors, negative values, etc.
- Put interface in root of src directory
- write "isDirectory(std::string path)" and enforce this where necessary
- write getRandom() and replace old calls to rand()
- Performance on different systems???
- There was a weird bug where the mouse teleported and the program crashed
- The mouse sometimes rotates weirdly (goes slowly, backwards for a second, and then forwards fast.
  You can see what I mean by just increasing the view length of the sensors for a continuous algo)
- Remove as many c_str() as possible
- Replace "cout" with "print"
- Pass things by reference when possible
- Sprinkle assertions everywhere
- Validate the coding standards (especially "{" placement)
- Rewrite "i++" and "++i" as "i += 1"
- Give better explanations for the GeometryUtilities
